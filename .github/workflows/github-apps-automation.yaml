name: GitHub App Automation

on:
  issues:
    types: [opened]

jobs:
  run-automation:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Notify start of automation
        run: echo "Starting GitHub Apps automation for issue #${{ github.event.issue.number }}"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Parse issue body for code and manifest name
        id: parse
        run: |
          # Extract the JSON code block from the issue body
          echo "$ISSUE_BODY" | awk '/```json/{flag=1;next}/```/{flag=0}flag' > codeblock.json
          # Parse code and manifest_name from the code block
          CODE=$(jq -r '.code // empty' codeblock.json)
          MANIFEST_NAME=$(jq -r '.manifest_name // empty' codeblock.json)
          echo "code=$CODE" >> $GITHUB_OUTPUT
          echo "manifest_name=$MANIFEST_NAME" >> $GITHUB_OUTPUT
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}

      - name: Run src/github_app_creator.py
        env:
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
          TFC_WORKSPACE_ID: ${{ secrets.TFC_WORKSPACE_ID }}
        run: |
          python src/github_app_creator.py \
            --enterprise "dte-energy-company" \
            --org "dteenergy" \
            --token "${{ secrets.GITHUB_TOKEN }}" \
            --code "${{ steps.parse.outputs.code }}" \
